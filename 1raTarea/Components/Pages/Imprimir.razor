@page "/registro/imprimir/{id}"
@inject NavigationManager NavMan
@rendermode InteractiveServer
@inject IJSRuntime JSx
@using System.Text.Json
@using _1raTarea
@layout PrintLayout

<h3>Reporte de caso</h3>

<div class="mb-3">
    Fecha: @reporte.Fecha
</div>

<div class="mb-3">
    <b>Descripcion: @reporte.Descripcion</b>
</div>

<div>
    <b>Costo Estimado: </b>
    <LabelDinero Valor="@reporte.CostoEstimado" />
</div>


@code {
    [Parameter]
    public string Id { get; set; }

    public Imprimir(string id)
    {
        Id = id;
    }

    Reporte reporte = new Reporte();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var registrosJson = await JSx.InvokeAsync<string>("localStorage.getItem", "registros");

            if (registrosJson != null)
            {
                var registros = JsonSerializer.Deserialize<List<Reporte>>(registrosJson);

                reporte = registros?.FirstOrDefault(r => r.Id == Id);

                if (reporte == null || string.IsNullOrEmpty(reporte.Id))
                {
                    await JSx.InvokeVoidAsync("alert", "No se encontró el registro");
                    NavMan.NavigateTo("registro");
                }
                else
                {
                    StateHasChanged();
                    await JSx.InvokeVoidAsync("window.print");
                    await JSx.InvokeVoidAsync("window.close");
                }
            }
            else
            {
                await JSx.InvokeVoidAsync("alert", "No se encontraron registros");
                NavMan.NavigateTo("registro");
            }
        }
    }
}