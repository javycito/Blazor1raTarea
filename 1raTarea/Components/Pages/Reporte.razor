@page "/"
@rendermode InteractiveServer
@inject IJSRuntime JSx
@using System.Text.Json

<PageTitle>Estadísticas</PageTitle>

<h2 class="text-center my-4">Reporte de Estadísticas</h2>

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="card text-center mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Casos Registrados</h5>
                    <p class="card-text display-4">@registros.Count</p>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card text-center mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Vehículos Involucrados</h5>
                    <p class="card-text display-4">@registros.Sum(r => r.VehiculosInvolucrados)</p>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card text-center mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Muertos</h5>
                    <p class="card-text display-4">@registros.Sum(r => r.Muertos)</p>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card text-center mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Heridos</h5>
                    <p class="card-text display-4">@registros.Sum(r => r.Heridos)</p>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card text-center mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Costo Estimado Total</h5>
                    <p class="card-text display-4">
                        <LabelDinero Valor="@registros.Sum(r => r.CostoEstimado)" />
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    List<Reporte> registros = new List<Reporte>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var registrosJson = await JSx.InvokeAsync<string>("localStorage.getItem", "registros");
            if (registrosJson != null)
            {
                registros = JsonSerializer.Deserialize<List<Reporte>>(registrosJson);
                StateHasChanged();
            }
        }
    }
}
